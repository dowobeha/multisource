initialize empty queue
initialize empty trie
add trie root node to queue

for each language l
	collect translation options t[l] for sentence in language l
end for


while queue not empty

	start_node = queue.dequeue	

	for each language l

		if start_node has been previously annotated with a source l coverage vector
		
			for each translation option o in t[l]
	
				q = o's source l coverage vector
		
				from all coverage vectors stored at start_node,
					collect the set of coverage vectors s that 
					can be legally extended by q
		
				if set s is not empty
		
					node = start_node
					
					for each target word w in o
			
						node = expand_trie(node,w)
			
						annotate node as reachable using l
			
					end for
					
					for each coverage vector p in s		
					
						coverage vector r = p intersect q
							
						annotate node with new coverage vector r
									
					end for
				
				end if 
		
			end for
			
		end if
	
	end for


	pruning_children:
	for each child of start_node
	
		for each language l
			
			if child is not reachable using l
			
				prune child
				continue pruning_children
			
			end if
			
		end for
	
		add child to queue
	
	end for

end while
